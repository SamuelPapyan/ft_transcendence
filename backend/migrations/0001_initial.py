# Generated by Django 4.2.11 on 2024-04-18 23:56

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel_name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=255)),
                ('password', models.CharField(max_length=255)),
                ('two_factor', models.BooleanField(default=False)),
                ('full_name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=255)),
                ('date', models.DateTimeField(default=datetime.datetime(2024, 4, 19, 3, 55, 59, 901872))),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sender', to='backend.user')),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('p1_score', models.IntegerField(default=0)),
                ('p2_score', models.IntegerField(default=0)),
                ('start', models.DateTimeField(default=datetime.datetime(2024, 4, 19, 3, 55, 59, 900873))),
                ('end', models.DateTimeField(null=True)),
                ('lose', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='loser_player', to='backend.user')),
                ('p1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player_1', to='backend.user')),
                ('p2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player_2', to='backend.user')),
                ('win', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='winner_player', to='backend.user')),
            ],
        ),
        migrations.CreateModel(
            name='Chat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chat_name', models.CharField(max_length=255)),
                ('in_game', models.BooleanField(default=False)),
                ('channels', models.ManyToManyField(to='backend.channel')),
            ],
        ),
        migrations.AddField(
            model_name='channel',
            name='messages',
            field=models.ManyToManyField(to='backend.message'),
        ),
        migrations.AddField(
            model_name='channel',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owner', to='backend.user'),
        ),
        migrations.AddField(
            model_name='channel',
            name='users',
            field=models.ManyToManyField(to='backend.user'),
        ),
        migrations.CreateModel(
            name='DMChannel',
            fields=[
                ('channel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='backend.channel')),
                ('user1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user1', to='backend.user')),
                ('user2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user2', to='backend.user')),
            ],
            bases=('backend.channel',),
        ),
    ]
